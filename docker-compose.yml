version: '3'

volumes:
  data:

services:
  # Database Machines
  database:
    build: database/
    restart: always
    volumes:
      # Volume dos dados
      - data:/var/lib/postgresql/data
      # Scripts
      - ./database/scripts:/scripts
      - ./database/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  # Cache Machines
  cache:
    build: cache/
    restart: always
    command: memcached -m 64
  
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

    restart: always
    privileged: true

  # Backend Machines
  backend:
    build: backend/
    restart: always
    command: ./scripts/wait-for-it.sh -t 0 database:5432 -- bash -c "python telegram_bot.py && python manage.py collectstatic --noinput && python manage.py migrate && gunicorn simple_project_manager.wsgi -b 0.0.0.0:8000 -w 3"
    volumes:
      - ./backend:/simple_project_manager
    depends_on:
      - database
      - cache
    expose:
      - "8000"
    env_file:
      - secrets.env

  server:
    build: server/
    restart: always
    volumes:
      - ./backend/simple_project_manager/staticfiles:/simple_project_manager/staticfiles/    
    environment:
      VIRTUAL_HOST: server.simpleprojectmanager.site
    depends_on:
      - backend

  # Frontend Machines
  project_manager:
    build: project_manager/
    restart: always    
    depends_on:
      - server
    environment:
      VIRTUAL_HOST: manager.simpleprojectmanager.site
  client:
    build: client/
    restart: always
    depends_on:
      - server
    environment:
      VIRTUAL_HOST: client.simpleprojectmanager.site
